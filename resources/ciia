1. normalize
2. for variable 1 to 4
    3. calculate mean (mu) and standard deviation (sigma)
    4. since K=3, for s=1 to 3
        5. calculate z(s) so that area(s) is
            area(1)=1/6,
            area(2)=1/2,
            area(3)=5/6
        6. compute attributes values, x(s) = z(s)*sigma + mu
    7. execute k-means on these variables (that means just set these variables as centres)
    8. allocate cluster labels (1, 2 or 3) for the three variables to every pattern and compute new centres.
    9. execute k-means on complete value set
    10. store the class labels according to what is occurring more often
11. after doing so for all 4 variables each pattern should have 4 labels of the most occurring clusters.
i.e. pattern 1 - 1213
12. find the unique strings for all patterns and that will be the number of clusters K’
i.e cluster 1: string 1213
    cluster 2: string 3213
    cluster 3: string 1233
    cluster 4: string 1323
So, K’ = 4. Find the centres of each of these clusters (based on the centres of the patterns for each variable separately)
13. Since K’>K apply MergeDBMSDC to get three points {1}, {2,3}, {4}
14. Clusters 2 and 3 are merged because they belong to the same set
15. Find the mean of these 3 clusters to get final three enters that are the initial cluster centres for the k-means algorithm




To rerun k-means:

After each cluster has a final defined center, k-means is rerun so that all patterns can repositioned to where they belong.
A list (or number) of those misplaced is created.

To reposition the patterns this is done by the euclidean distance of the whole pattern to the center of the cluster:

d[P(1.1, 2.2, 3.3, 4.4), C(1, 2, 3, 4)] = SQRT((1.1-1)^2 + (2.2 - 2)^2 + ...)


